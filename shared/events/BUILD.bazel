load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "consumer.go",
        "producer.go",
        "utils.go",
    ],
    importpath = "github.com/mennanov/scalemate/shared/events",
    visibility = ["//visibility:public"],
    deps = [
        "//accounts/accounts_proto:go_default_library",
        "//scheduler/scheduler_proto:go_default_library",
        "//shared/events_proto:go_default_library",
        "//shared/utils:go_default_library",
        "@com_github_gogo_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_jinzhu_gorm//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_streadway_amqp//:go_default_library",
        "@io_bazel_rules_go//proto/wkt:field_mask_go_proto",
    ],
)

load("@com_github_atlassian_bazel_tools//gorevive:def.bzl", "go_revive_test")

go_revive_test(
    name = "go_lint",
    # Go source files to be linted.
    srcs = glob(["*.go"]),
    # Revive .toml config.
    config = "//:revive.toml",  # it can also be a regular Bazel label.
    formatter = "stylish",
    # The paths have to be relative to the workspace root.
    paths = [
        "./...",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "producer_test.go",
        "utils_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//accounts/accounts_proto:go_default_library",
        "//scheduler/scheduler_proto:go_default_library",
        "//shared/events_proto:go_default_library",
        "//shared/utils:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@io_bazel_rules_go//proto/wkt:field_mask_go_proto",
    ],
)
