load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "auth.go",
        "change_password.go",
        "get.go",
        "options.go",
        "password_auth.go",
        "register.go",
        "server.go",
        "token_auth.go",
    ],
    data = ["//cert:cert"],
    importpath = "github.com/mennanov/scalemate/accounts/server",
    visibility = ["//visibility:public"],
    deps = [
        "//accounts/accounts_proto:go_default_library",
        "//accounts/models:go_default_library",
        "//shared/auth:go_default_library",
        "//shared/events:go_default_library",
        "//shared/middleware:go_default_library",
        "//shared/utils:go_default_library",
        "@com_github_go_ozzo_ozzo_validation//:go_default_library",
        "@com_github_go_ozzo_ozzo_validation//is:go_default_library",
        "@com_github_gogo_protobuf//types:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//auth:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/logrus:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//recovery:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//tags:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_middleware//validator:go_default_library",
        "@com_github_jinzhu_gorm//dialects/postgres:go_default_library",
        "@com_github_jmoiron_sqlx//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//credentials:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "change_password_test.go",
        "get_test.go",
        "password_auth_test.go",
        "register_test.go",
        "testsuite_test.go",
        "token_auth_test.go",
    ],
    data = ["//accounts/migrations"],
    embed = [":go_default_library"],
    deps = [
        "//accounts/accounts_proto:go_default_library",
        "//accounts/conf:go_default_library",
        "//shared/auth:go_default_library",
        "//shared/events:go_default_library",
        "//shared/events_proto:go_default_library",
        "//shared/testutils:go_default_library",
        "//shared/utils:go_default_library",
        "@com_github_golang_migrate_migrate//:go_default_library",
        "@com_github_golang_migrate_migrate//database/postgres:go_default_library",
        "@com_github_golang_migrate_migrate//source/file:go_default_library",
        "@com_github_google_uuid//:go_default_library",
        "@com_github_jmoiron_sqlx//:go_default_library",
        "@com_github_nats_io_go_nats_streaming//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_stretchr_testify//suite:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//credentials:go_default_library",
    ],
)

load("@com_github_atlassian_bazel_tools//gorevive:def.bzl", "go_revive_test")

go_revive_test(
    name = "go_lint",
    # Go source files to be linted.
    srcs = glob(["*.go"]),
    # Revive .toml config.
    config = "//:revive.toml",  # it can also be a regular Bazel label.
    formatter = "stylish",
    # The paths have to be relative to the workspace root.
    paths = [
        "./...",
    ],
)
